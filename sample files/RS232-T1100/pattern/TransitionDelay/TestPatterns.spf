STIL 1.0 { Design 2005; }
Header {
   Title "  TetraMAX (TM)  D-2010.03-SP5-2-i101213_153359 STIL output";
   Date "Mon Oct 10 13:40:09 2011";
   Source "Minimal STIL for design `uart'";
   History {
      Ann {*  Thu Jul 29 15:46:39 2010  *}
      Ann {*  DFT Compiler Y-2006.06-SP2  *}
      Ann {*   Uncollapsed Transition Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT       1048 *}
      Ann {* Possibly detected                PT          0 *}
      Ann {* Undetectable                     UD         69 *}
      Ann {* ATPG untestable                  AU        341 *}
      Ann {* Not detected                     ND          0 *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                              1458 *}
      Ann {* test coverage                            75.45% *}
      Ann {* fault coverage                           71.88% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                          40 *}
      Ann {*     #fast_sequential patterns               40 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* rule  severity  #fails  description *}
      Ann {* ----  --------  ------  --------------------------------- *}
      Ann {* N23   warning        1  inconsistent UDP *}
      Ann {* V14   warning        1  missing state *}
      Ann {*  *}
      Ann {* clock_name        off  usage *}
      Ann {* ----------------  ---  -------------------------- *}
      Ann {* sys_clk            0   master shift  *}
      Ann {* sys_rst_l          1    *}
      Ann {*  *}
      Ann {* port_name         constraint_value *}
      Ann {* ----------------  --------------- *}
      Ann {* sys_rst_l           1 *}
      Ann {* test_mode           1 *}
      Ann {*  *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* Unified STIL Flow *}
      Ann {* serial_flag = 1 *}
   }
}
Signals {
   "sys_clk" In; "sys_rst_l" In; "xmitH" In; "xmit_dataH[7]" In; "xmit_dataH[6]" In;
   "xmit_dataH[5]" In; "xmit_dataH[4]" In; "xmit_dataH[3]" In; "xmit_dataH[2]" In;
   "xmit_dataH[1]" In; "xmit_dataH[0]" In; "uart_REC_dataH" In; "test_mode" In; "test_se" In;
   "test_si" In { ScanIn; } "uart_XMIT_dataH" Out; "xmit_doneH" Out; "rec_dataH[7]" Out;
   "rec_dataH[6]" Out; "rec_dataH[5]" Out; "rec_dataH[4]" Out; "rec_dataH[3]" Out;
   "rec_dataH[2]" Out; "rec_dataH[1]" Out; "rec_dataH[0]" Out; "rec_readyH" Out; "test_so" Out
   { ScanOut; }
}
SignalGroups {
   "_pi" = '"sys_clk" + "sys_rst_l" + "uart_REC_dataH" + "xmitH" +
   "xmit_dataH[0]" + "xmit_dataH[1]" + "xmit_dataH[2]" + "xmit_dataH[3]" +
   "xmit_dataH[4]" + "xmit_dataH[5]" + "xmit_dataH[6]" + "xmit_dataH[7]" +
   "test_mode" + "test_se" + "test_si"'; // #signals=15
   "_in" = '"sys_clk" + "sys_rst_l" + "xmitH" + "xmit_dataH[7]" +
   "xmit_dataH[6]" + "xmit_dataH[5]" + "xmit_dataH[4]" + "xmit_dataH[3]" +
   "xmit_dataH[2]" + "xmit_dataH[1]" + "xmit_dataH[0]" + "uart_REC_dataH" +
   "test_mode" + "test_se" + "test_si"'; // #signals=15
   "all_inputs" = '"sys_clk" + "sys_rst_l" + "uart_REC_dataH" + "xmitH" +
   "xmit_dataH[0]" + "xmit_dataH[1]" + "xmit_dataH[2]" + "xmit_dataH[3]" +
   "xmit_dataH[4]" + "xmit_dataH[5]" + "xmit_dataH[6]" + "xmit_dataH[7]" +
   "test_mode" + "test_se" + "test_si"'; // #signals=15
   "_po" = '"rec_dataH[0]" + "rec_dataH[1]" + "rec_dataH[2]" + "rec_dataH[3]" +
   "rec_dataH[4]" + "rec_dataH[5]" + "rec_dataH[6]" + "rec_dataH[7]" +
   "rec_readyH" + "uart_XMIT_dataH" + "xmit_doneH" + "test_so"'; // #signals=12
   "_si" = '"test_si"' { ScanIn; } // #signals=1
   "all_outputs" = '"rec_dataH[0]" + "rec_dataH[1]" + "rec_dataH[2]" +
   "rec_dataH[3]" + "rec_dataH[4]" + "rec_dataH[5]" + "rec_dataH[6]" +
   "rec_dataH[7]" + "rec_readyH" + "uart_XMIT_dataH" + "xmit_doneH" + "test_so"';
   // #signals=12
   "all_ports" = '"all_inputs" + "all_outputs"'; // #signals=27
   "_clk" = '"sys_clk" + "sys_rst_l"'; // #signals=2
   "_so" = '"test_so"' { ScanOut; } // #signals=1
   "_out" = '"uart_XMIT_dataH" + "xmit_doneH" + "rec_dataH[7]" + "rec_dataH[6]" +
   "rec_dataH[5]" + "rec_dataH[4]" + "rec_dataH[3]" + "rec_dataH[2]" +
   "rec_dataH[1]" + "rec_dataH[0]" + "rec_readyH" + "test_so"'; // #signals=12
}
Timing {
   WaveformTable "_default_WFT_" {
      Period '10ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '4ns' X; } }
         "all_outputs" { H { '0ns' X; '4ns' H; } }
         "all_outputs" { L { '0ns' X; '4ns' L; } }
         "all_outputs" { T { '0ns' X; '4ns' T; } }
         "sys_clk" { P { '0ns' D; '5ns' U; '10ns' D; } }
         "sys_rst_l" { P { '0ns' U; '5ns' D; '10ns' U; } }
      }
   }
}
ScanStructures {
   ScanChain "1" {
      ScanLength 58;
      ScanIn "test_si";
      ScanOut "test_so";
      ScanInversion 0;
      ScanCells "uart.iRECEIVER_bitCell_cntrH_reg_0_.SI" "uart.iRECEIVER_bitCell_cntrH_reg_1_.SI" 
      "uart.iRECEIVER_bitCell_cntrH_reg_2_.SI" "uart.iRECEIVER_bitCell_cntrH_reg_3_.SI" 
      "uart.iRECEIVER_par_dataH_reg_0_.SI" "uart.iRECEIVER_par_dataH_reg_1_.SI" 
      "uart.iRECEIVER_par_dataH_reg_2_.SI" "uart.iRECEIVER_par_dataH_reg_3_.SI" 
      "uart.iRECEIVER_par_dataH_reg_4_.SI" "uart.iRECEIVER_par_dataH_reg_5_.SI" 
      "uart.iRECEIVER_par_dataH_reg_6_.SI" "uart.iRECEIVER_par_dataH_reg_7_.SI" 
      "uart.iRECEIVER_rec_datH_reg.SI" "uart.iRECEIVER_rec_datSyncH_reg.SI" 
      "uart.iRECEIVER_rec_readyH_reg.SI" "uart.iRECEIVER_recd_bitCntrH_reg_0_.SI" 
      "uart.iRECEIVER_recd_bitCntrH_reg_1_.SI" "uart.iRECEIVER_recd_bitCntrH_reg_2_.SI" 
      "uart.iRECEIVER_recd_bitCntrH_reg_3_.SI" "uart.iRECEIVER_state_reg_0_.SI" 
      "uart.iRECEIVER_state_reg_1_.SI" "uart.iRECEIVER_state_reg_2_.SI" 
      "uart.iXMIT_bitCell_cntrH_reg_0_.SI" "uart.iXMIT_bitCell_cntrH_reg_1_.SI" 
      "uart.iXMIT_bitCell_cntrH_reg_2_.SI" "uart.iXMIT_bitCell_cntrH_reg_3_.SI" 
      "uart.iXMIT_bitCountH_reg_0_.SI" "uart.iXMIT_bitCountH_reg_1_.SI" 
      "uart.iXMIT_bitCountH_reg_2_.SI" "uart.iXMIT_bitCountH_reg_3_.SI" 
      "uart.iXMIT_state_reg_0_.SI" "uart.iXMIT_state_reg_1_.SI" "uart.iXMIT_state_reg_2_.SI" 
      "uart.iXMIT_xmit_ShiftRegH_reg_0_.SI" "uart.iXMIT_xmit_ShiftRegH_reg_1_.SI" 
      "uart.iXMIT_xmit_ShiftRegH_reg_2_.SI" "uart.iXMIT_xmit_ShiftRegH_reg_3_.SI" 
      "uart.iXMIT_xmit_ShiftRegH_reg_4_.SI" "uart.iXMIT_xmit_ShiftRegH_reg_5_.SI" 
      "uart.iXMIT_xmit_ShiftRegH_reg_6_.SI" "uart.iXMIT_xmit_ShiftRegH_reg_7_.SI" 
      "uart.iXMIT_xmit_doneH_reg.SI" "uart.rec_dataH_reg_0_.SI" "uart.rec_dataH_reg_1_.SI" 
      "uart.rec_dataH_reg_2_.SI" "uart.rec_dataH_reg_3_.SI" "uart.rec_dataH_reg_4_.SI" 
      "uart.rec_dataH_reg_5_.SI" "uart.rec_dataH_reg_6_.SI" "uart.rec_dataH_reg_7_.SI" 
      "uart.rec_dataH_temp_reg_0_.SI" "uart.rec_dataH_temp_reg_1_.SI" 
      "uart.rec_dataH_temp_reg_2_.SI" "uart.rec_dataH_temp_reg_3_.SI" 
      "uart.rec_dataH_temp_reg_4_.SI" "uart.rec_dataH_temp_reg_5_.SI" 
      "uart.rec_dataH_temp_reg_6_.SI" "uart.rec_dataH_temp_reg_7_.SI" ;
      ScanMasterClock "sys_clk" ;
   }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
Procedures {
   "capture" {
      W "_default_WFT_";
      F { "sys_rst_l"=1; "test_mode"=1; }
      C { "all_inputs"=01\r10 N 1NN; "all_outputs"=\r12 X ; }
      V { "_pi"=\r15 # ; }
      V { "_po"=\r12 # ; }
   }
   "capture_sys_clk" {
      W "_default_WFT_";
      F { "sys_rst_l"=1; "test_mode"=1; }
      C { "all_inputs"=01\r10 N 1NN; "all_outputs"=\r12 X ; }
      "forcePI": V { "_pi"=\r15 # ; }
      "measurePO": V { "_po"=\r12 # ; }
      C { "rec_dataH[0]"=X; "rec_dataH[1]"=X; "rec_dataH[2]"=X; "rec_dataH[3]"=X; "rec_dataH[4]"=X; 
         "rec_dataH[5]"=X; "rec_dataH[6]"=X; "rec_dataH[7]"=X; "rec_readyH"=X; "uart_XMIT_dataH"=X; 
         "xmit_doneH"=X; }
      "pulse": V { "sys_clk"=P; }
   }
   "capture_sys_rst_l" {
      W "_default_WFT_";
      F { "sys_rst_l"=1; "test_mode"=1; }
      C { "all_inputs"=01\r10 N 1NN; "all_outputs"=\r12 X ; }
      "forcePI": V { "_pi"=\r15 # ; }
      "measurePO": V { "_po"=\r12 # ; }
      C { "rec_dataH[0]"=X; "rec_dataH[1]"=X; "rec_dataH[2]"=X; "rec_dataH[3]"=X; "rec_dataH[4]"=X; 
         "rec_dataH[5]"=X; "rec_dataH[6]"=X; "rec_dataH[7]"=X; "rec_readyH"=X; "uart_XMIT_dataH"=X; 
         "xmit_doneH"=X; }
      "pulse": V { "sys_rst_l"=P; }
   }
   "load_unload" {
      W "_default_WFT_";
      C { "all_inputs"=01\r10 N 1NN; "all_outputs"=\r12 X ; }
      "Internal_scan_pre_shift": V { "_clk"=01; "_si"=N; "_so"=X; "test_se"=1; }
      Shift {          W "_default_WFT_";
         V { "_clk"=P1; "_si"=#; "_so"=#; }
      }
   }
}
MacroDefs {
   "test_setup" {
      W "_default_WFT_";
      C { "all_inputs"=\r15 N ; "all_outputs"=\r12 X ; }
      V { "sys_clk"=0; "sys_rst_l"=1; }
      V { "sys_rst_l"=P; }
      V { "sys_rst_l"=1; "test_mode"=1; }
   }
}
Pattern "_pattern_" {
   W "_default_WFT_";
   "precondition all Signals": C { "_pi"=\r15 0 ; "_po"=\r12 X ; }
   Macro "test_setup";
   Ann {* fast_sequential *}
   "pattern 0": Call "load_unload" { 
      "test_si"=0000000000000000000000010101000011110110010000111111111101; }
   V { "_pi"=011110111111100; }
   Call "capture_sys_clk" { 
      "_pi"=011110111111100; }
   Call "capture_sys_clk" { 
      "_pi"=011110111111100; "_po"=LLLLLLLLLHHH; }
   Ann {* fast_sequential *}
   "pattern 1": Call "load_unload" { 
      "test_so"=HHHHHHHHHHHHHHHHLHHHHHHLHLHLLLLLLLLLHLLLLHLLHHHHHHHHHHLLLL; 
      "test_si"=1010101000000000001011010100111111101101000011010101011110; }
   V { "_pi"=010011001110100; }
   Call "capture_sys_clk" { 
      "_pi"=010011001110100; }
   Call "capture_sys_clk" { 
      "_pi"=010011001110100; "_po"=LHLHLHLHLHLL; }
   Ann {* fast_sequential *}
   "pattern 2": Call "load_unload" { 
      "test_so"=HLHLHLHLLHLHLHLHLHLHLHHLHLHHHHHHLLLHLHHHLLHLLLHLHLHLHLLLLH; 
      "test_si"=0100000100000000000000101000000011110110010010101101001110; }
   V { "_pi"=011101011010100; }
   Call "capture_sys_clk" { 
      "_pi"=011101011010100; }
   Call "capture_sys_clk" { 
      "_pi"=011101011010100; "_po"=HLLLLLHLLLLH; }
   Ann {* fast_sequential *}
   "pattern 3": Call "load_unload" { 
      "test_so"=HLHHLHLLHLHHLHLLLLHLHHLHLLHLLLLLLLLHLHHLLHHLHHHHLHHLHLLLLL; 
      "test_si"=0000000000000000001111110011011111101000110010100101100011; }
   V { "_pi"=011010010000100; }
   Call "capture_sys_clk" { 
      "_pi"=011010010000100; }
   Call "capture_sys_clk" { 
      "_pi"=011010010000100; "_po"=LLLLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 4": Call "load_unload" { 
      "test_so"=LHLLHLHHHLLHLHHLLHLHHHHHHLHHHLLLLLLLLHHLHHHLHHLHLLHLHHLLLH; 
      "test_si"=0001010000000000010101101110111111010000001001000000000000; }
   V { "_pi"=011101000110101; }
   Call "capture_sys_clk" { 
      "_pi"=011101000110101; }
   Call "capture_sys_clk" { 
      "_pi"=011101000110101; "_po"=LLHLHLLLHLLL; }
   Ann {* fast_sequential *}
   "pattern 5": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHHLHLHHLHLLLLLLLLLLLHLLLLLLHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000111111011101011111010000000000000; }
   V { "_pi"=010110001101101; }
   Call "capture_sys_clk" { 
      "_pi"=010110001101101; }
   Call "capture_sys_clk" { 
      "_pi"=010110001101101; "_po"=LLLLLLLLHHLL; }
   Ann {* fast_sequential *}
   "pattern 6": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLHLLLLLLLLLLLHHHHLLLLLLHLLLLHLLLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000101000000000110001001110010011110; }
   V { "_pi"=011101111100101; }
   Call "capture_sys_clk" { 
      "_pi"=011101111100101; }
   Call "capture_sys_clk" { 
      "_pi"=011101111100101; "_po"=LLLLLLLLLHLH; }
   Ann {* fast_sequential *}
   "pattern 7": Call "load_unload" { 
      "test_so"=HHLLHLLHHHLLHLLHLLLLLLLLLHLHLLLLLLHLLHHLLHLLHHLHHLLHLLLLLL; 
      "test_si"=0000000000000000010000000011001111101000000010110010000000; }
   V { "_pi"=010011111001100; }
   Call "capture_sys_clk" { 
      "_pi"=010011111001100; }
   Call "capture_sys_clk" { 
      "_pi"=010011111001100; "_po"=LLLLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 8": Call "load_unload" { 
      "test_so"=LHHLLHLLHHLLHLLLLHHLLLLLLLHHLHLLLLLLLHHLLLHLLLLHHLLHLLLLLH; 
      "test_si"=0000000000000000000000000101110011111000011001011010100000; }
   V { "_pi"=011010010101101; }
   Call "capture_sys_clk" { 
      "_pi"=011010010101101; }
   Call "capture_sys_clk" { 
      "_pi"=011010010101101; "_po"=LLLLLLLLLHHL; }
   Ann {* fast_sequential *}
   "pattern 9": Call "load_unload" { 
      "test_so"=HLHHLHLHLHHLHLHLHLLLLLLLLLLLLLLLLLLLLHHLHLLLHHHLHHLHLHLLLH; 
      "test_si"=0000000000000000000000000010000001110110111000010010101110; }
   V { "_pi"=011100101010100; }
   Call "capture_sys_clk" { 
      "_pi"=011100101010100; }
   Call "capture_sys_clk" { 
      "_pi"=011100101010100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 10": Call "load_unload" { 
      "test_so"=LHLLHLHLLHLLHLHLLLLLLLLLLLHLLLLLHLLHLHHHLLLLHHLLHLLHLHLLLL; 
      "test_si"=0000000000000000000010101011000011100110011000010100001110; }
   V { "_pi"=010101010101101; }
   Call "capture_sys_clk" { 
      "_pi"=010101010101101; }
   Call "capture_sys_clk" { 
      "_pi"=010101010101101; "_po"=LLLLLLLLLHLL; }
   Ann {* fast_sequential *}
   "pattern 11": Call "load_unload" { 
      "test_so"=LHLHLLLLLHLHLLLLLHLLLHLHLLHHLLLHLLLLLHHLHLLLLLLLHLHLLLLLLL; 
      "test_si"=0000000000000000000000000111011111010100100011000000000100; }
   V { "_pi"=010011001100101; }
   Call "capture_sys_clk" { 
      "_pi"=010011001100101; }
   Call "capture_sys_clk" { 
      "_pi"=010011001100101; "_po"=LLLLLLLLLHLL; }
   Ann {* fast_sequential *}
   "pattern 12": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLHLHHLLLHHHHLLHLLLLHLLLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000010000011110100000000000000000000; }
   V { "_pi"=011011111110100; }
   Call "capture_sys_clk" { 
      "_pi"=011011111110100; }
   Call "capture_sys_clk" { 
      "_pi"=011011111110100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 13": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLLHHLLLLLLLHLHLLLLLLHHLLLLLLLLLLHL; 
      "test_si"=0000000000000000000000000101000001100100000000000000000001; }
   V { "_pi"=011110011011101; }
   Call "capture_sys_clk" { 
      "_pi"=011110011011101; }
   Call "capture_sys_clk" { 
      "_pi"=011110011011101; "_po"=LLLLLLLLLHLL; }
   Ann {* fast_sequential *}
   "pattern 14": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLHLLLLHLLLLLLHHLLLLLLLLLLHH; 
      "test_si"=0000000000000000000000000011000011010100000010000000000011; }
   V { "_pi"=011000110111101; }
   Call "capture_sys_clk" { 
      "_pi"=011000110111101; }
   Call "capture_sys_clk" { 
      "_pi"=011000110111101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 15": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLHLLLLLLHLLLLLHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000000010000110010011011010000010000000001110; }
   V { "_pi"=010101110100101; }
   Call "capture_sys_clk" { 
      "_pi"=010101110100101; }
   Call "capture_sys_clk" { 
      "_pi"=010101110100101; "_po"=LLLLLLLLHLLL; }
   Ann {* fast_sequential *}
   "pattern 16": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLHLLLHLLLHLHLLLLLLHLLLLHLLLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000101000000101010100001000000000000; }
   V { "_pi"=010011101001100; }
   Call "capture_sys_clk" { 
      "_pi"=010011101001100; }
   Call "capture_sys_clk" { 
      "_pi"=010011101001100; "_po"=LLLLLLLLHHLL; }
   Ann {* fast_sequential *}
   "pattern 17": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLLHLLLHLLHLLLLLLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000111101011100110000000000000000011; }
   V { "_pi"=011111010010100; }
   Call "capture_sys_clk" { 
      "_pi"=011111010010100; }
   Call "capture_sys_clk" { 
      "_pi"=011111010010100; "_po"=LLLLLLLLLHLL; }
   Ann {* fast_sequential *}
   "pattern 18": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLHLLLLLLLLLLLHLHHLLLLLHHLLLLLHHLLLLLLLLLHLH; 
      "test_si"=0000000000000000000000000110000111010100000000000000000110; }
   V { "_pi"=011010100101100; }
   Call "capture_sys_clk" { 
      "_pi"=011010100101100; }
   Call "capture_sys_clk" { 
      "_pi"=011010100101100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 19": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLHLLLLHLLLLLLHLLLLLLHHLLLLLLLLHLLL; 
      "test_si"=0000000000000000000101000011001011100111000000000000001110; }
   V { "_pi"=011001001010101; }
   Call "capture_sys_clk" { 
      "_pi"=011001001010101; }
   Call "capture_sys_clk" { 
      "_pi"=011001001010101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 20": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLHLHLLLHHLLHHLLLLLLHHLLLHHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000101000000110000000001000000000100; }
   V { "_pi"=011010000000101; }
   Call "capture_sys_clk" { 
      "_pi"=011010000000101; }
   Call "capture_sys_clk" { 
      "_pi"=011010000000101; "_po"=LLLLLLLLHHLL; }
   Ann {* fast_sequential *}
   "pattern 21": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLLHLHLHLLLLLLHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000010000000101000011111000000000000000001110; }
   V { "_pi"=011101100110100; }
   Call "capture_sys_clk" { 
      "_pi"=011101100110100; }
   Call "capture_sys_clk" { 
      "_pi"=011101100110100; "_po"=LLLLLLLLLHHL; }
   Ann {* fast_sequential *}
   "pattern 22": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLHHLLHHLLHLLLLLLLLLLHHLLLHLHHLLLLLLLLLLLH; 
      "test_si"=0000000000000000010000000000000000000110000000100000001110; }
   V { "_pi"=010111001110101; }
   Call "capture_sys_clk" { 
      "_pi"=010111001110101; }
   Call "capture_sys_clk" { 
      "_pi"=010111001110101; "_po"=LLLLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 23": Call "load_unload" { 
      "test_so"=HLLLLLLLHLLLLLLLLLHHHLLHHLHLLLLLLLLHLHHLLLHLLLLHLLLLLLLLLL; 
      "test_si"=0000000000000000000010000110000000100110000000000000001101; }
   V { "_pi"=011011111000101; }
   Call "capture_sys_clk" { 
      "_pi"=011011111000101; }
   Call "capture_sys_clk" { 
      "_pi"=011011111000101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 24": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLHLLLLHHLLLLLHLLHLLLLLLLHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000110000011011000010000000000000000; }
   V { "_pi"=011111110000100; }
   Call "capture_sys_clk" { 
      "_pi"=011111110000100; }
   Call "capture_sys_clk" { 
      "_pi"=011111110000100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 25": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLHLLLLLHLLLLLHHLLHHLHHLLLLLLLLLLLH; 
      "test_si"=0000000000000000000000000110111111010000100001000000000000; }
   V { "_pi"=011010000110101; }
   Call "capture_sys_clk" { 
      "_pi"=011010000110101; }
   Call "capture_sys_clk" { 
      "_pi"=011010000110101; "_po"=LLLLLLLLHLLL; }
   Ann {* fast_sequential *}
   "pattern 26": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLHLLLLLLLLLLLHLLLLLLHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000011100011101000001000000000000000; }
   V { "_pi"=010100011001101; }
   Call "capture_sys_clk" { 
      "_pi"=010100011001101; }
   Call "capture_sys_clk" { 
      "_pi"=010100011001101; "_po"=LLLLLLLLLHLL; }
   Ann {* fast_sequential *}
   "pattern 27": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLHLHHLLLLLLHLHHLLHLLLLLLLLLLLLLLLH; 
      "test_si"=0000000000000000000000000110000011011001111000000000000000; }
   V { "_pi"=010100110011101; }
   Call "capture_sys_clk" { 
      "_pi"=010100110011101; }
   Call "capture_sys_clk" { 
      "_pi"=010100110011101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 28": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLHLLLLLHLLLLLHHLLLLLLLLLLLLLLLLLLH; 
      "test_si"=0000000000000000000000000110001111011000111000001000000111; }
   V { "_pi"=011010100110100; }
   Call "capture_sys_clk" { 
      "_pi"=011010100110100; }
   Call "capture_sys_clk" { 
      "_pi"=011010100110100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 29": Call "load_unload" { 
      "test_so"=LLLHLLLLLLHLLLLLLHLLLLLLLHLLLHLLLLLLLHHHLLLLHHLLLHLLLLLLLH; 
      "test_si"=0000000000000000000000000011011011100110000000000000001011; }
   V { "_pi"=011001001100101; }
   Call "capture_sys_clk" { 
      "_pi"=011001001100101; }
   Call "capture_sys_clk" { 
      "_pi"=011001001100101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 30": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLLHHLHHHLLLLLHHLLLLLHHLLLLLLLLHHLH; 
      "test_si"=0000000000000000000000000110000011100110001010001000001110; }
   V { "_pi"=011100111110101; }
   Call "capture_sys_clk" { 
      "_pi"=011100111110101; }
   Call "capture_sys_clk" { 
      "_pi"=011100111110101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 31": Call "load_unload" { 
      "test_so"=LLHLLLLLLLHLLLLLLHLLLLLLLLHHLLLLLLLLLHHLLHLLHHHLLHLLLLLLLL; 
      "test_si"=0000000000000000000000000001000000000100000001000000000011; }
   V { "_pi"=011111011011100; }
   Call "capture_sys_clk" { 
      "_pi"=011111011011100; }
   Call "capture_sys_clk" { 
      "_pi"=011111011011100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 32": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHHLHHLHHLHLLLLLLLLHLHHLLLLLHHLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000110000011100010000010000000000100; }
   V { "_pi"=010100010001100; }
   Call "capture_sys_clk" { 
      "_pi"=010100010001100; }
   Call "capture_sys_clk" { 
      "_pi"=010100010001100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 33": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLLHHLLLLLLLLLHLLLLLLLLLLLLLLLLLLLH; 
      "test_si"=0000000000000000000000000110000010111000000000001000000000; }
   V { "_pi"=011011100001100; }
   Call "capture_sys_clk" { 
      "_pi"=011011100001100; }
   Call "capture_sys_clk" { 
      "_pi"=011011100001100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 34": Call "load_unload" { 
      "test_so"=LLLHLLLLLLHLLLLLLHLLLLLLLLHHLLLLHHLHLHHLLLHLHHLLLHLLLLLLLH; 
      "test_si"=0000000000000000000000000011111111100100000000000000000111; }
   V { "_pi"=011111000010101; }
   Call "capture_sys_clk" { 
      "_pi"=011111000010101; }
   Call "capture_sys_clk" { 
      "_pi"=011111000010101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 35": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLLHHLLLLLLLLLHLLLLLLHHLLLLLLLLHLLH; 
      "test_si"=0000000000000000000000000011000111100100000000000000000010; }
   V { "_pi"=010000100011101; }
   Call "capture_sys_clk" { 
      "_pi"=010000100011101; }
   Call "capture_sys_clk" { 
      "_pi"=010000100011101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 36": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLLHHLLHLLLLLLHLLLLLLLLLLLLLLLLLHLL; 
      "test_si"=0000000000000000000000000100000000000000000000000000000000; }
   V { "_pi"=010101000110100; }
   Call "capture_sys_clk" { 
      "_pi"=010101000110100; }
   Call "capture_sys_clk" { 
      "_pi"=010101000110100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 37": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLHLLLLLLLLHHLLLLLLLHLHLLLLLLLLLLLLLLLLLLLH; 
      "test_si"=0000000000000000000000000010000011100000000000000000000000; }
   V { "_pi"=010010001101100; }
   Call "capture_sys_clk" { 
      "_pi"=010010001101100; }
   Call "capture_sys_clk" { 
      "_pi"=010010001101100; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 38": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLLHLLLLLLLLLLLLLLLLLLLH; 
      "test_si"=0000000000000000000000000000000000000100000001000000000100; }
   V { "_pi"=010111011110101; }
   Call "capture_sys_clk" { 
      "_pi"=010111011110101; }
   Call "capture_sys_clk" { 
      "_pi"=010111011110101; "_po"=LLLLLLLLLLLL; }
   Ann {* fast_sequential *}
   "pattern 39": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLLLHHHHLHHLHLLLLLLLLHLHLLLLLLLLLLLLLLLLLLLL; 
      "test_si"=0000000000000000000000000000000000000100000000000000000101; }
   V { "_pi"=010011011101100; }
   Call "capture_sys_clk" { 
      "_pi"=010011011101100; }
   Call "capture_sys_clk" { 
      "_pi"=010011011101100; "_po"=LLLLLLLLLHHL; }
   Ann {* fast_sequential *}
   "end 39 unload": Call "load_unload" { 
      "test_so"=LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLHHH; }
}

// Patterns reference 365 V statements, generating 2702 test cycles
